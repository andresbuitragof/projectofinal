knitr::opts_chunk$set(echo = TRUE)
data_raw <- read.csv("dataset.csv")
View(data_raw)
colnames(data_raw) <- tolower(colnames(data_raw))
data_raw <- read.csv("dataset.csv")
colnames(data_raw) <- tolower(colnames(data_raw))
str(data_raw)
data <- read.csv("dataset.csv")
View(data)
colnames(data) <- tolower(colnames(data))
str(data)
data$target = as.factor(data$target)
summary(data)
vars <- colnames(data)
numericVars <- vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars <- setdiff(colnames(data), numericVars)
ggplot(stack(data[,numericVars]), aes(x = ind, y = values)) +
geom_boxplot(aes(fill=ind))
knitr::opts_chunk$set(echo = TRUE)
library(ElemStatLearn)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(class)
vars <- colnames(data)
numericVars <- vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars <- setdiff(colnames(data), numericVars)
ggplot(stack(data[,numericVars]), aes(x = ind, y = values)) +
geom_boxplot(aes(fill=ind))
vars <- colnames(data)
numericVars <- vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars <- setdiff(colnames(data), numericVars)
for (catVar in categoricalVars){
if(catVar != 'target') {
print(
ggplot(data, aes_string(x=catVar)) + geom_density(aes(group=target, colour=target, fill=target), alpha=0.3)
)
}
}
vars <- colnames(data)
numericVars <- vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars <- setdiff(colnames(data), numericVars)
for (catVar in numericVars){
if(catVar != 'target') {
print(
ggplot(data, aes_string(x=catVar)) + geom_density(aes(group=target, colour=target, fill=target), alpha=0.3)
)
}
}
str(data)
str(data)
data$ha_tenido_credito_de_consumo    = as.factor(data$ha_tenido_credito_de_consumo   )
data$ha_tenido_credito_de_materiales = as.factor(data$ha_tenido_credito_de_materiales)
data$ha_tenido_credito_auto          = as.factor(data$ha_tenido_credito_auto         )
data$ha_tenido_tdc                   = as.factor(data$ha_tenido_tdc                  )
data$tiene_cuenta_cobranza           = as.factor(data$tiene_cuenta_cobranza          )
data$tiene_cuenta_banco_xyz          = as.factor(data$tiene_cuenta_banco_xyz         )
data$tiene_cuenta_otro_banco         = as.factor(data$tiene_cuenta_otro_banco        )
data$tiene_cuenta_revolvente         = as.factor(data$tiene_cuenta_revolvente        )
data$tiene_saldo_vencido             = as.factor(data$tiene_saldo_vencido            )
data$tiempo_vida_crediticia          = as.factor(data$tiempo_vida_crediticia         )
data$ha_tenido_credito_de_consumo    = as.factor(data$ha_tenido_credito_de_consumo   )
data$ha_tenido_credito_de_materiales = as.factor(data$ha_tenido_credito_de_materiales)
data$ha_tenido_credito_auto          = as.factor(data$ha_tenido_credito_auto         )
data$ha_tenido_tdc                   = as.factor(data$ha_tenido_tdc                  )
data$tiene_cuenta_cobranza           = as.factor(data$tiene_cuenta_cobranza          )
data$tiene_cuenta_banco_xyz          = as.factor(data$tiene_cuenta_banco_xyz         )
data$tiene_cuenta_otro_banco         = as.factor(data$tiene_cuenta_otro_banco        )
data$tiene_cuenta_revolvente         = as.factor(data$tiene_cuenta_revolvente        )
data$tiene_saldo_vencido             = as.factor(data$tiene_saldo_vencido            )
data$tiempo_vida_crediticia          = as.factor(data$tiempo_vida_crediticia         )
str(data)
vars <- colnames(data)
numericVars <- vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars <- setdiff(colnames(data), numericVars)
for (catVar in numericVars){
if(catVar != 'target') {
print(
ggplot(data, aes_string(x=catVar)) + geom_density(aes(group=target, colour=target, fill=target), alpha=0.3)
)
}
}
table(duplicated(data))
summary(data)
aggr(data,numbers=T, prop=F,sortVars = T,cex.axis = 0.7)
library(ggthemes)
library(gridExtra)
vars = colnames(data)
numericVars = vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars = setdiff(colnames(data), numericVars)
for (var in numericVars){
if(catVar != 'target') {
g1=ggplot(data, aes_string(y=var))+
geom_boxplot(fill="orange1")+
coord_flip()+
labs(y="")+
scale_y_continuous(limits = c(16,100))+
theme_base()+
theme(axis.text.y=element_blank(),axis.ticks.y=element_blank())
#histogram:
g2=ggplot(data, aes_string(x=var))+
labs(x="target")+
geom_histogram(bins=18,color="black", fill="orange")+
theme_base()+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
print( grid.arrange(g1,g2) )
}
}
vars = colnames(data)
numericVars = vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars = setdiff(colnames(data), numericVars)
for (var in numericVars){
if(catVar != 'target') {
g1=ggplot(data, aes_string(y=var))+
geom_boxplot(fill="orange1")+
coord_flip()+
labs(y="")+
theme_base()+
theme(axis.text.y=element_blank(),axis.ticks.y=element_blank())
#histogram:
g2=ggplot(data, aes_string(x=var))+
labs(x="target")+
geom_histogram(color="black", fill="orange")+
theme_base()+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
print( grid.arrange(g1,g2) )
}
}
vars = colnames(data)
numericVars = vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars = setdiff(colnames(data), numericVars)
for (var in numericVars){
if(Var != 'target') {
g1=ggplot(data, aes_string(y=var))+
geom_boxplot(fill="orange1")+
coord_flip()+
labs(y="")+
theme_base()+
theme(axis.text.y=element_blank(),axis.ticks.y=element_blank())
#histogram:
g2=ggplot(data, aes_string(x=var))+
labs(x=var)+
geom_histogram(color="black", fill="orange")+
theme_base()+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
print( grid.arrange(g1,g2) )
}
}
vars = colnames(data)
numericVars = vars[sapply(data[,vars], class) %in% c('numeric','integer')]
categoricalVars = setdiff(colnames(data), numericVars)
for (catvar in numericVars){
if(catVar != 'target') {
g1=ggplot(data, aes_string(y=catvar))+
geom_boxplot(fill="orange1")+
coord_flip()+
labs(y="")+
theme_base()+
theme(axis.text.y=element_blank(),axis.ticks.y=element_blank())
#histogram:
g2=ggplot(data, aes_string(x=catvar))+
labs(x=catvar)+
geom_histogram(color="black", fill="orange")+
theme_base()+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
print( grid.arrange(g1,g2) )
}
}
table(data$numero_mora_alta)
table(data$numero_mora_irrecuperable)
table(data$cuentas_revolventes_abiertas)
table(data$cuentas_revolventes_abiertas)
install.packages("ElemStatLearn")
install.packages("ElemStatLearn")
install.packages("ElemStatLearn")
install.packages(Rtools)
install.packages("Rtools")
library(ElemStatLearn)
install_version()
install.packages("ElemStatLearn")
install.packages("ElemStatLearn")
library(remotes)
install_version("ElemStatLearn")
library(ElemStatLearn)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(class)
library(ggthemes)
library(gridExtra)
logReg1 <- glm(target ~ ., data=data, family="binomial")
